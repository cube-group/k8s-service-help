apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-v1-public
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-v1-public
rules:
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - ''
    resources:
      - services
      - endpoints
      - secrets
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - extensions
    resources:
      - ingresses
  - verbs:
      - update
    apiGroups:
      - extensions
    resources:
      - ingresses/status
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-v1-public
subjects:
  - kind: ServiceAccount
    name: traefik-v1-public
    namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-v1-public
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: traefik-v1-public
  namespace: kube-system
  labels:
    ingress-controller: traefik
    ingress-controller-type: public
    k8s-app: traefik-v1-public
spec:
  selector:
    matchLabels:
      k8s-app: traefik-v1-public
  template:
    metadata:
      labels:
        ingress-controller: traefik
        ingress-controller-type: public
        k8s-app: traefik-v1-public
    spec:
      containers:
        - name: traefik-v1-public
          image: traefik:1.7.34
          args:
            - '--api'
            - '--kubernetes'
            - >-
              --kubernetes.labelselector=select=traefik-ingress-controller-public
            - '--logLevel=INFO'
            - '--metrics'
            - '--metrics.prometheus'
            - '--maxidleconnsperhost=-1'
            - '--accesslog.bufferingsize=100'
            - '--forwardingtimeouts.responseheadertimeout=60s'
            - '--respondingtimeouts.idletimeout=180s'
            - '--retry.attempts=10'
            - '--idletimeout=180s'
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: admin
              containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
      nodeSelector:
        corecd.traefik_lb: 'true'
      serviceAccountName: traefik-v1-public
      schedulerName: default-scheduler